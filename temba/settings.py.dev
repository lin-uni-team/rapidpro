#-----------------------------------------------------------------------------------
# Sample RapidPro settings file, this should allow you to deploy RapidPro locally on
# a PostgreSQL database.
#
# The following are requirements:
#     - a postgreSQL database named 'temba', with a user name 'temba' and 
#       password 'temba' (with postgis extensions installed)
#     - a redis instance listening on localhost
#-----------------------------------------------------------------------------------

# import our default settings
from settings_common import *
import logging

#-----------------------------------------------------------------------------------
# Used when creating callbacks for Twilio, Nexmo etc..
#-----------------------------------------------------------------------------------
HOSTNAME = 'rapidpro.ngrok.com'
TEMBA_HOST = 'rapidpro.ngrok.com'

#-----------------------------------------------------------------------------------
# Redis & Cache Configuration (we expect a Redis instance on localhost)
#-----------------------------------------------------------------------------------
CACHES = {
    "default": {
        "BACKEND": "redis_cache.cache.RedisCache",
        "LOCATION": "%s:%s:%s" % (REDIS_HOST, REDIS_PORT, REDIS_DB),
        "OPTIONS": {
            "CLIENT_CLASS": "redis_cache.client.DefaultClient",
        }
    }
}

#-----------------------------------------------------------------------------------
# Need a PostgreSQL database on localhost with postgis extension installed.
#-----------------------------------------------------------------------------------
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'temba',
        'USER': 'temba',
        'PASSWORD': '1',
        'HOST': 'localhost',
        'PORT': '',
        'ATOMIC_REQUESTS': True,
        'OPTIONS': {
        }
    }
}

# reuse our connections for up to 60 seconds
DATABASES['default']['CONN_MAX_AGE'] = 60
DATABASES['default']['ATOMIC_REQUESTS'] = True
DATABASES['default']['ENGINE'] = 'django.contrib.gis.db.backends.postgis'

INTERNAL_IPS = ('127.0.0.1',)

#-----------------------------------------------------------------------------------
# Load nose in development
#-----------------------------------------------------------------------------------
INSTALLED_APPS = INSTALLED_APPS + ('django_nose', 'storages')
# INSTALLED_APPS = INSTALLED_APPS + ('debug_toolbar', )

#-----------------------------------------------------------------------------------
# In development, add in extra logging for exceptions and the debug toolbar
#-----------------------------------------------------------------------------------
MIDDLEWARE_CLASSES = ('temba.middleware.ExceptionMiddleware',) + MIDDLEWARE_CLASSES

#-----------------------------------------------------------------------------------
# In development, perform background tasks in the web thread (synchronously)
#-----------------------------------------------------------------------------------
CELERY_ALWAYS_EAGER = True
CELERY_EAGER_PROPAGATES_EXCEPTIONS = True
BROKER_BACKEND = 'memory'

#-----------------------------------------------------------------------------------
# This setting throws an exception if a naive datetime is used anywhere. (they should
# always contain a timezone)
#-----------------------------------------------------------------------------------
import warnings
warnings.filterwarnings(
        'error', r"DateTimeField .* received a naive datetime",
        RuntimeWarning, r'django\.db\.models\.fields')

#-----------------------------------------------------------------------------------
# Make our sitestatic URL be our static URL on development
#-----------------------------------------------------------------------------------
STATIC_URL = '/sitestatic/'
#USE_I18N = True
#USE_L10N = True
#LOCALE_PATHS = []
#
#LOCALE_PATHS1 = (os.path.join(PROJECT_DIR, '../locale'),)
#LOCALE_PATHS += LOCALE_PATHS1
#LOCALE_PATHS += [
#  '/home/jessie/dev/rapidpro/locale',
#]
#LOCALE_PATHS = ( '/home/jessie/dev/rapidpro/locale', )
#LANGUAGE_CODE = 'es'



LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'null': {
            'level':'DEBUG',
            'class':'django.utils.log.NullHandler',
        },
        'logfile': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': PROJECT_DIR + "/logfile",
            'maxBytes': 50000,
            'backupCount': 2,
            'formatter': 'standard',
        },
        'console':{
            'level':'INFO',
            'class':'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        'django': {
            'handlers':['console'],
            'propagate': True,
            'level':'WARN',
        },
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'MYAPP': {
            'handlers': ['console', 'logfile'],
            'level': 'DEBUG',
        },
    }
}
